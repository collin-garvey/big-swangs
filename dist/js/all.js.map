{"version":3,"sources":["big-swangs.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["var React = window.React;\r\n\r\nvar classify = (job) => {\r\n    if(typeof job === 'string') {\r\n        return job.replace(/\\s+/g, '-').toLowerCase();\r\n    }\r\n};\r\n\r\nvar formatNumber = (num) => {\r\n    let number = parseFloat(num);\r\n\r\n    return (typeof number != 'number') ? '----' : Number(Math.round(parseFloat(number))).toLocaleString('en');\r\n};\r\n\r\nvar formatName = (name) => {\r\n    let pieces = name.split(' ');\r\n\r\n    return (name === 'YOU') ? name : pieces[0].substr(0, 1).toUpperCase() + '. ' + pieces[1].substr(0, 1).toUpperCase() + '.';\r\n};\r\n\r\nvar formatMaxHit = (hitText) => {\r\n    let pieces = hitText.split('-');\r\n\r\n    return pieces[0] + ' ' + pieces[1];\r\n};\r\n\r\nvar Header = React.createClass({\r\n    shouldComponentUpdate: function(nextProps) {\r\n        return nextProps.encdps !== '---';\r\n    },\r\n\r\n    render: function() {\r\n        return (\r\n            <header className={`header ${this.props.isActive ? 'active': 'inactive'}`}>\r\n                <div className=\"header__left\">\r\n                    <span className=\"encounter__time\"><i className=\"encounter__status\"></i> {this.props.duration}</span>\r\n                </div>\r\n\r\n                <div className=\"header__right\">\r\n                    <span className=\"encounter__name\">\r\n\r\n                    </span>\r\n                    <span className=\"encounter__raid-dps\"><em>{formatNumber(this.props.encdps)}</em></span>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n});\r\n\r\nvar Combatant = React.createClass({\r\n    render: function() {\r\n        let misses = (parseInt(this.props.misses, 10) > 0) ? <span className=\"combatant__misses tag\">M:{this.props.misses}</span> : '';\r\n        let job;\r\n\r\n        if(this.props.name === 'Limit Break') {\r\n            job = 'limit-break';\r\n        }\r\n        else if(this.props.name.indexOf('(') >= 0) {\r\n            job = 'choco';\r\n        }\r\n        else if(this.props.job === '') {\r\n            job = 'unk';\r\n        }\r\n        else {\r\n            job = this.props.job;\r\n        }\r\n\r\n        return(\r\n            <li className={`combatant ${classify(job)} ${this.props.isSelf ? 'self' : ''}`}>\r\n                <span className=\"combatant__bar\" style={{width: this.props.damageOfTotal + '%'}}></span>\r\n                <i className=\"combatant__icon\"></i>\r\n                <span className=\"combatant__name\">{formatName(this.props.name)}</span>\r\n\r\n                <span className=\"combatant__damage\">\r\n                    <span className=\"damage-maxhit tag\">{formatMaxHit(this.props.maxhit)}</span>\r\n                    {misses}\r\n                    <span className=\"damage tag\">{formatNumber(this.props.damage)}</span>\r\n                    <span className=\"damage-percent tag\">{this.props.damagePercent}</span>\r\n                </span>\r\n\r\n                <span className=\"combatant__dps\">{formatNumber(this.props.dps)}</span>\r\n            </li>\r\n        );\r\n    }\r\n});\r\n\r\nvar LimitBreak = React.createClass({\r\n    render: function() {\r\n        return (\r\n            <div className=\"combatant limit-break\">\r\n                <i className=\"combatant__icon\"></i>\r\n                <span className=\"combatant__name\">{this.props.name}</span>\r\n                <span className=\"combatant__damage\">\r\n                    <span className=\"damage tag\">{formatNumber(this.props.damage)}</span>\r\n                    <span className=\"damage-percent tag\">{this.props.damagePercent}</span>\r\n                </span>\r\n                <span className=\"combatant__bar\" style={{width: this.props.damageOfTotal + '%'}}></span>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\nvar CombatantList = React.createClass({\r\n    render: function() {\r\n        let combatantsArray = [];\r\n        let combatants = this.props.combatants;\r\n        let dmgLeader = 0;\r\n        let limitBreak;\r\n\r\n        for(let c in combatants) {\r\n            if (combatants.hasOwnProperty(c)) {\r\n                dmgLeader = Math.max(combatants[c].damage, dmgLeader);\r\n            }\r\n        }\r\n\r\n        for(var combatant in combatants) {\r\n            if(combatants.hasOwnProperty(combatant)) {\r\n                var isSelf = (combatants[combatant].name === 'YOU');\r\n\r\n                if(combatants[combatant].name !== 'Limit Break') {\r\n                    combatantsArray.push(\r\n                        <Combatant\r\n                            key={combatant}\r\n                            name={combatants[combatant].name}\r\n                            job={combatants[combatant].Job}\r\n                            damagePercent={combatants[combatant]['damage%']}\r\n                            dps={combatants[combatant].dps}\r\n                            maxhit={combatants[combatant].maxhit}\r\n                            damage={combatants[combatant].damage}\r\n                            misses={combatants[combatant].misses}\r\n                            damageOfTotal={(combatants[combatant].damage / dmgLeader) * 100}\r\n                            isSelf={isSelf}\r\n                            />\r\n                    );\r\n                }\r\n                else {\r\n                    limitBreak = <LimitBreak\r\n                                    key={combatant}\r\n                                    name={combatants[combatant].name}\r\n                                    job={combatants[combatant].Job}\r\n                                    damagePercent={combatants[combatant]['damage%']}\r\n                                    damage={combatants[combatant].damage}\r\n                                    damageOfTotal={(combatants[combatant].damage / dmgLeader) * 100}\r\n                                    />\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ul className={`${this.props.isActive ? 'active': 'inactive'}`}>\r\n                {combatantsArray}\r\n                {limitBreak}\r\n            </ul>\r\n        );\r\n    }\r\n});\r\n\r\nvar Overlay = React.createClass({\r\n    shouldComponentUpdate: (nextProps) => {\r\n        return nextProps.parseData.Encounter.encdps !== '---';\r\n    },\r\n\r\n    componentWillMount: () => {\r\n        document.documentElement.classList.add('resizable');\r\n    },\r\n\r\n    render: function() {\r\n        var combatant = this.props.parseData.Combatant;\r\n        var encounter = this.props.parseData.Encounter;\r\n\r\n        return (\r\n            <div className=\"overlay\">\r\n                <Header\r\n                    duration={encounter.duration}\r\n                    encdps={encounter.encdps}\r\n                    isActive={this.props.parseData.isActive}\r\n                    />\r\n                <CombatantList\r\n                    combatants={combatant}\r\n                    encounterDamage={encounter.damage}\r\n                    isActive={this.props.parseData.isActive}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n});\r\n\r\ndocument.addEventListener('onOverlayDataUpdate', function(e) {\r\n    React.render(\r\n        <Overlay parseData={e.detail} />,\r\n\r\n        document.getElementById('container')\r\n    );\r\n});\r\n"],"sourceRoot":"/source/"}